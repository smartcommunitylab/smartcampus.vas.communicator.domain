/*******************************************************************************
 * Copyright 2012-2013 Trento RISE
 * 
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 * 
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 ******************************************************************************/
package eu.trentorise.smartcampus.domain.communicator;

import it.sayservice.platform.compiler.domain.model.annotations.ServiceNotification;
import it.sayservice.platform.compiler.domain.model.annotations.Service;
import it.sayservice.platform.compiler.domain.model.annotations.Subscription;
import it.sayservice.platform.compiler.domain.model.annotations.Local;
import it.sayservice.platform.compiler.domain.model.annotations.Process;

import eu.trentorise.smartcampus.domain.communicator.beans.ActionDescriptor;
import eu.trentorise.smartcampus.domain.communicator.beans.Notification;
import eu.trentorise.smartcampus.domain.communicator.beans.UnitnNews;
import eu.trentorise.smartcampus.domain.communicator.beans.NewsIds;

import eu.trentorise.smartcampus.domain.communicator.helpers.UnitnNewsHelper;

import smartcampus.service.unitnnews.data.message.Unitnnews;

import java.util.Map;

DomainType AbstractSourceFactory {
	public immutable var sourceType : String;
    public immutable var name : String;

    operation createDefaultSource(userId:String,userSocialId:String);
}

DomainType AbstractSource {
	port update(userId:String, sourceType: String, notifications: Notification[]);

	public immutable var userId : String;
	public immutable var userSocialId : String;
	
	public immutable var id : String;
	public immutable var sourceType : String;

    operation delete();
}

DomainType AbstractFeed {
	public immutable var id : String;
	public immutable var name : String;
	public immutable var description : String;
	public immutable var sourceType : String;

	port update(sourceType: String, notifications: Notification[]);
}

// UNITN
DomainObject OperaFeed implements AbstractFeed {
	public immutable var id : String = "Opera Universitaria";
	public immutable var name : String = "Opera Universitaria";
	public immutable var sourceType : String = "Opera Universitaria";
	public immutable var description : String = "Opera Universitaria";
	private var newsIds : NewsIds = NewsIds.getInstance();
	
    action notifyNews(news:UnitnNews[]) {
    	notifications : Notification[] = UnitnNewsHelper.buildNotification(news,id,newsIds);
    	set newsIds = UnitnNewsHelper.updateIds(newsIds, news, false);
    	if (notifications != null && count(notifications) > 0) {
			publish update(sourceType,notifications);
		}
    }
    subscribe OperaNews!updateNews() => notifyNews(data);
}
DomainObject CiscaFeed implements AbstractFeed {
	public immutable var id : String = "Cisca";
	public immutable var name : String = "Cisca";
	public immutable var sourceType : String = "Cisca";
	public immutable var description : String = "Cisca";
	private var newsIds : NewsIds = NewsIds.getInstance();
	
    action notifyNews(news:UnitnNews[]) {
    	notifications : Notification[] = UnitnNewsHelper.buildNotification(news,id,newsIds);
    	set newsIds = UnitnNewsHelper.updateIds(newsIds, news, false);
    	if (notifications != null && count(notifications) > 0) {
			publish update(sourceType,notifications);
		}
    }
    subscribe CiscaNews!updateNews() => notifyNews(data);
}
DomainObject OperaNews {
    @ServiceNotification(serviceId="smartcampus.service.unitnnews", methodName="GetOperaNews", converter="eu.trentorise.smartcampus.domain.communicator.helpers.UnitnNewsDataConverter")
    port updateNews(data : UnitnNews[]);
    @Subscription(serviceId="smartcampus.service.unitnnews", methodName="GetOperaNews")
    operation subscribeOperaNews();
	@Service(serviceId="smartcampus.service.unitnnews", methodName="GetOperaNews", converter="eu.trentorise.smartcampus.domain.communicator.helpers.GetNewsDataConverter")
    operation getOperaNews() returns UnitnNews[];
    
	action notifyNews(data: UnitnNews[]) {
		publish updateNews(data);
	}
    action initialize() {
        invoke subscribeOperaNews();
        invoke data:getOperaNews() => notifyNews(data);
    }
}
DomainObject CiscaNews {
    @ServiceNotification(serviceId="smartcampus.service.unitnnews", methodName="GetCiscaNews", converter="eu.trentorise.smartcampus.domain.communicator.helpers.UnitnNewsDataConverter")
    port updateNews(data : UnitnNews[]);
    @Subscription(serviceId="smartcampus.service.unitnnews", methodName="GetCiscaNews")
    operation subscribeCiscaNews();    
    @Service(serviceId="smartcampus.service.unitnnews", methodName="GetCiscaNews", converter="eu.trentorise.smartcampus.domain.communicator.helpers.GetNewsDataConverter")
    operation getCiscaNews() returns UnitnNews[];

	action notifyNews(data: UnitnNews[]) {
		publish updateNews(data);
	}
    action initialize() {
        invoke subscribeCiscaNews();
        invoke data:getCiscaNews() => notifyNews(data);
    }
}

DomainObject UnitnFeed implements AbstractFeed {
	private var newsIds : NewsIds = NewsIds.getInstance();
	
    action notifyNews(news:UnitnNews[],src:String) {
    	notifications : Notification[] = UnitnNewsHelper.buildNotification(news,src,newsIds);
    	set newsIds = UnitnNewsHelper.updateIds(newsIds, news, false);
    	if (notifications != null && count(notifications) > 0) {
			publish update(src,notifications);
		}
    }
    subscribe UnitnDataNews!updateNews(src="Ateneo") => notifyNews(data,"Ateneo");
    subscribe UnitnDataNews!updateNews(src="Unisport") => notifyNews(data,"UniSport");
    subscribe UnitnDataNews!updateNews(src="economia") => notifyNews(data,"Economia e management");
    subscribe UnitnDataNews!updateNews(src="giurisprudenza") => notifyNews(data,"Giurisprudenza");
    subscribe UnitnDataNews!updateNews(src="dphys") => notifyNews(data,"Fisica");
    subscribe UnitnDataNews!updateNews(src="dicam") => notifyNews(data,"Ingegneria civile, ambientale e meccanica");
    subscribe UnitnDataNews!updateNews(src="disi") => notifyNews(data,"Ingegneria e scienza dell’informazione");
    subscribe UnitnDataNews!updateNews(src="dii") => notifyNews(data,"Ingegneria industriale");
    subscribe UnitnDataNews!updateNews(src="lettere") => notifyNews(data,"Lettere e filosofia");
    subscribe UnitnDataNews!updateNews(src="dmath") => notifyNews(data,"Matematica");
    subscribe UnitnDataNews!updateNews(src="cogsci") => notifyNews(data,"Psicologia e scienze cognitive");
    subscribe UnitnDataNews!updateNews(src="sociologia") => notifyNews(data,"Sociologia e ricerca sociale");
    
}


DomainObject UnitnDataNews {
    @ServiceNotification(serviceId="smartcampus.service.unitnnews", methodName="GetUnitnNews", converter="eu.trentorise.smartcampus.domain.communicator.helpers.UnitnNewsDataConverter")
    port updateNews(src : String, data : UnitnNews[]);   
	@Subscription(serviceId="smartcampus.service.unitnnews", methodName="GetUnitnNews")
    operation subscribeUnitnNews(baseurl:String,variableurl:String,source:String);
    @Service(serviceId="smartcampus.service.unitnnews", methodName="GetUnitnNews", converter="eu.trentorise.smartcampus.domain.communicator.helpers.GetNewsDataConverter")
    operation getUnitnNews(baseurl:String,variableurl:String,source:String) returns UnitnNews[];

	action notifyNews(src: String, data: UnitnNews[]) {
		publish updateNews(src, data);
	}

    action initialize() {
        invoke subscribeUnitnNews("http://www.unitn.it","ateneo","Ateneo");
        invoke subscribeUnitnNews("http://www.unisport.tn.it","","Unisport");

        invoke subscribeUnitnNews("http://www.unitn.it","economia","Economia e management");
        invoke subscribeUnitnNews("http://www.unitn.it","giurisprudenza","Giurisprudenza");
        invoke subscribeUnitnNews("http://www.unitn.it","dphys","Fisica");
        invoke subscribeUnitnNews("http://www.unitn.it","dicam","Ingegneria civile, ambientale e meccanica");
        invoke subscribeUnitnNews("http://www.unitn.it","disi","Ingegneria e scienza dell’informazione");
        invoke subscribeUnitnNews("http://www.unitn.it","dii","Ingegneria industriale");
        invoke subscribeUnitnNews("http://www.unitn.it","lettere","Lettere e filosofia");
        invoke subscribeUnitnNews("http://www.unitn.it","dmath","Matematica");
        invoke subscribeUnitnNews("http://www.unitn.it","cogsci","Psicologia e scienze cognitive");
        invoke subscribeUnitnNews("http://www.unitn.it","sociologia","Sociologia e ricerca sociale");


        invoke data:getUnitnNews("http://www.unitn.it","ateneo","Ateneo") => notifyNews("Ateneo",data);
        invoke data:getUnitnNews("http://www.unisport.tn.it","","Unisport") => notifyNews("Unisport",data);
        
        invoke data:getUnitnNews("http://www.unitn.it","economia","Economia e management") => notifyNews("economia",data);
        invoke data:getUnitnNews("http://www.unitn.it","giurisprudenza","Giurisprudenza") => notifyNews("giurisprudenza",data);
        invoke data:getUnitnNews("http://www.unitn.it","dphys","Fisica") => notifyNews("dphys",data);
        invoke data:getUnitnNews("http://www.unitn.it","dicam","Ingegneria civile, ambientale e meccanica") => notifyNews("dicam",data);
        invoke data:getUnitnNews("http://www.unitn.it","disi","Ingegneria e scienza dell’informazione") => notifyNews("disi",data);
        invoke data:getUnitnNews("http://www.unitn.it","dii","Ingegneria industriale") => notifyNews("dii",data);
        invoke data:getUnitnNews("http://www.unitn.it","lettere","Lettere e filosofia") => notifyNews("lettere",data);
        invoke data:getUnitnNews("http://www.unitn.it","dmath","Matematica") => notifyNews("dmath",data);
        invoke data:getUnitnNews("http://www.unitn.it","cogsci","Psicologia e scienze cognitive") => notifyNews("cogsci",data);
        invoke data:getUnitnNews("http://www.unitn.it","sociologia","Sociologia e ricerca sociale") => notifyNews("sociologia",data);
        
    }
  }
